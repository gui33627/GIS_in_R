nTrt <-5
Trt.name <- c("A","B","C","D","E")
Trt <- 1:nTrt
Period <-1:nTrt
Subject <-1:nTrt
Xlatin <- data.frame(matrix(0,nTrt^2,3))
Subject.temp <- sample(Subject, nTrt, replace=FALSE) # row order for this LSD
Period.temp <-sample(Period, nTrt, replace=FALSE) # column order for this LSD
Trt.temp <- sample(Trt, nTrt, replace=FALSE) # treatment order
Xlatin[,1]<-rep(Subject.temp, each=nTrt) #row Blk var
Xlatin[,2]<-rep(Period.temp,nTrt) #column Blk var
col.ord <- NULL
for (i in 1:nTrt) col.ord <-c(col.ord, nTrt-mod((1:nTrt)+i,nTrt))
Xlatin[,3]<-(Trt.name[Trt.temp])[col.ord] # treatment assignment
print(matrix(Xlatin[,3],nTrt,nTrt))
Xlatin
Subject.temp
Period.temp
matrix(0,nTrt^2,3)
Subject.temp
Period.temp
Subject.temp
Subject.temp <- sample(Subject, nTrt, replace=FALSE) # row order for this LSD
Period.temp <-sample(Period, nTrt, replace=FALSE) # column order for this LSD
Subject.temp
Period.temp
Trt.temp <- sample(Trt, nTrt, replace=FALSE) # treatment order
Trt.temp
rep(Subject.temp, each=nTrt)
rep(Period.temp,nTrt)
col.ord
?sample
sample(1:5,5)
sample(Period, nTrt, replace=FALSE)
Xlatin
print(matrix(Xlatin[,3],nTrt,nTrt))
Xlatin[,3]
Xlatin
Trt.temp
Period.temp
Trt.temp
Trt.name[Trt.temp]
## Latin Square Design of 3 by 3 blocking variables with 10 replicates
set.seed(1234)
nTrt <-3
nRep <-10
Trt <- 1:nTrt #A, B, C
Period <-1:nTrt
Subject <-1:(nTrt*nRep)
Xlatin <- matrix(0,nTrt^2*nRep,3)
Xlatin.temp <- matrix(0, nTrt^2,3)
for (k in 1:nRep) {
Subject.temp <- sample(Subject[(k-1)*nTrt+1:nTrt], nTrt, replace=FALSE) # row order for LSD rep k
Period.temp <-sample(Period, nTrt, replace=FALSE) # columb order for LSD rep k
Trt.temp <- sample(Trt, nTrt, replace=FALSE) # treatment order
Xlatin.temp[,1]<-rep(Subject.temp, each=nTrt) #row Blk var
Xlatin.temp[,2]<-rep(Period.temp,nTrt) #column Blk var
col.ord <- NULL
for (i in 1:nTrt) col.ord <-c(col.ord, nTrt-mod((1:nTrt)+i,nTrt)) # rotating treatment
Xlatin.temp[,3]<-Trt.temp[col.ord] # treatment assignment
Xlatin[(k-1)*nTrt^2+(1:nTrt^2),]<-Xlatin.temp
}
# check
#array(Xlatin[,3], dim=c(3,3,10))
## simulating data
u0<- 1150
# treatment effect
tau <- c(100,-100,-100)
#subject
sub <- rnorm(10, 0, 350)
# period effect
per <- c(-30, 0, 30)
Y <- u0 + rep(sub, each=9)+
(Xlatin[,3]==1)*tau[1]+(Xlatin[,3]==2)*tau[2]+(Xlatin[,3]==3)*tau[3]+
(Xlatin[,2]==1)*per[1]+(Xlatin[,2]==2)*per[2]+(Xlatin[,2]==3)*per[3]+rnorm(nrow(Xlatin),0, 250)
data <- data.frame(cbind(Y,Xlatin))
names(data)<-c("outcome", "Subject", "Period", "Treatment")
mod1 <- aov(outcome~factor(Subject)+factor(Period)+factor(Treatment), data=data)
summary(mod1)
Xlatin
nTrt^2
nTrt <-3
nRep <-10
Trt <- 1:nTrt #A, B, C
Period <-1:nTrt
Subject <-1:(nTrt*nRep)
Xlatin <- matrix(0,nTrt^2*nRep,3)
Xlatin
Xlatin.temp <- matrix(0, nTrt^2,3)
Xlatin.temp
k <- 1
sample(Subject[(k-1)*nTrt+1:nTrt], nTrt, replace=FALSE)
sample(Period, nTrt, replace=FALSE)
sample(Trt, nTrt, replace=FALSE)
rep(Subject.temp, each=nTrt)
rep(Period.temp,nTrt)
col.ord <- NULL
c(col.ord, nTrt-mod((1:nTrt)+i,nTrt)
)
mod((1:nTrt)+i,nTrt)
?mod
(1:nTrt)
nTrt
(k-1)*nTrt^2
(1:nTrt^2)
u0<- 1150
# treatment effect
tau <- c(100,-100,-100)
#subject
sub <- rnorm(10, 0, 350)
# period effect
per <- c(-30, 0, 30)
u0 + rep(sub, each=9)+
(Xlatin[,3]==1)*tau[1]+(Xlatin[,3]==2)*tau[2]+(Xlatin[,3]==3)*tau[3]+
(Xlatin[,2]==1)*per[1]+(Xlatin[,2]==2)*per[2]+(Xlatin[,2]==3)*per[3]+rnorm(nrow(Xlatin),0, 250)
# Lec 4 page 27
power.anova.test(power = 0.8,sig.level = 0.05, delta = 0.5, type = "one.sample")
?power.anova.test
# Lec 4 page 27
power.anova.test(groups = 3, between.var = 206.5, within.var = 579.7, sig.level = 0.05, power = 0.8)
# Assigment 3
df <- read.csv("/Users/junhui/Documents/NYU/Courses/J-term2021/Assignment3/sport1.csv")
df
df$Subject <- as.factor(df$Subject)
df$Path <- as.factor(df$Path)
mod <- aov(Time ~ Path + Error(Subject/Path), data = df)
summary(mod)
mod1 <- aov(Time ~ Path + Path:Subject + Error(Subject/Path), data = df)
summary(mod1)
df1 <- read.csv("/Users/junhui/Documents/NYU/Courses/J-term2021/Assignment3/sport2.csv")
df1
df1$Subject <- as.factor(df1$Subject)
df1$Path <- as.factor(df1$Path)
mod2 <- aov(Time~Path*Subject, data = df)
summary(mod2)
data <- read.csv("/Users/junhui/Documents/NYU/Courses/J-term2021/week2/rat.csv")
data$Rat <- factor(data$Rat)
data$fDose <- factor(data$Dose)
mod1 <- aov(Rate~fDose+Rat, data=data)
summary(mod1)
df <- read.csv("/Users/junhui/Documents/NYU/Courses/J-term2021/Assignment3/sport1.csv")
df$Subject <- as.factor(df$Subject)
df$Path <- as.factor(df$Path)
mod0 <- aov(Time ~ Path + Subject, data = df)
summary(mod0)
head(df)
df <- read.csv("/Users/junhui/Documents/NYU/Courses/J-term2021/Assignment3/sport1.csv")
df$Subject <- as.factor(df$Subject)
df$Path <- as.factor(df$Path)
mod0 <- aov(Time ~ Path + Subject, data = df)
summary(mod0)
(0.02222+0.14638)/63
(0.02222+0.14638)/63
(3.0739+0.9332)/63
(3.0739+0.9332)/63
(42+1)*(63+3)*0.06360476/((42+3)*(63+1)*0.02222)
mod1 <- aov(Time ~ Path*Subject + Error(Subject/Path), data = df)
summary(mod1)
mod3 <- aov(Time ~ Path*Subject + Error(Subject), data = df)
summary(mod3)
mod2 <- aov(Time ~ Path*Subject + Error(Subject/Path), data = df)
summary(mod2)
df1 <- read.csv("/Users/junhui/Documents/NYU/Courses/J-term2021/Assignment3/sport2.csv")
df1$Subject <- as.factor(df1$Subject)
df1$Path <- as.factor(df1$Path)
mod0 <- aov(Time ~ Path + Subject, data = df)
summary(mod0)
mod1 <- aov(Time ~ Path*Subject, data = df)
summary(mod1)
mod <- aov(Time ~ Path + Error(Subject/Path), data = df)
summary(mod)
mod2 <- aov(Time ~ Path*Subject + Error(Subject/Path), data = df)
summary(mod2)
mod3 <- aov(Time ~ Path*Subject + Error(Subject), data = df)
summary(mod3)
df <- read.csv("/Users/junhui/Documents/NYU/Courses/J-term2021/Assignment3/sport2.csv")
df$Subject <- as.factor(df$Subject)
df$Path <- as.factor(df$Path)
mod0 <- aov(Time ~ Path + Subject, data = df)
summary(mod0)
mod1 <- aov(Time ~ Path*Subject, data = df)
summary(mod1)
mod <- aov(Time ~ Path + Error(Subject/Path), data = df)
summary(mod)
mod2 <- aov(Time ~ Path*Subject + Error(Subject/Path), data = df)
summary(mod2)
mod3 <- aov(Time ~ Path*Subject + Error(Subject), data = df)
summary(mod3)
summary
mod1 <- aov(Time ~ Path*Subject, data = df)
summary(mod1)
mod3 <- aov(Time ~ Path*Subject + Error(Subject), data = df)
summary(mod3)
df <- read.csv("/Users/junhui/Documents/NYU/Courses/J-term2021/Assignment3/sport2.csv")
df$Subject <- as.factor(df$Subject)
df$Path <- as.factor(df$Path)
mod0 <- aov(Time ~ Path + Subject, data = df)
summary(mod0)
mod <- aov(Time ~ Path + Error(Subject/Path), data = df)
summary(mod)
mod1 <- aov(Time ~ Path*Subject, data = df)
summary(mod1)
mod2 <- aov(Time ~ Path*Subject + Error(Subject/Path), data = df)
summary(mod2)
mod3 <- aov(Time ~ Path*Subject + Error(Subject), data = df)
summary(mod3)
opter <- read.csv("/Users/junhui/Documents/NYU/Courses/J-term2021/Assignment3/copter.csv")
opter
rmodel <- lmer(time ~ height * wing + (1 | subId), data = opter)
anova(rmodel)
opter <- read.csv("/Users/junhui/Documents/NYU/Courses/J-term2021/Assignment3/copter.csv")
opter$subId <- as.factor(opter$subId)
opter$height <- as.factor(opter$height)
opter$wing <- as.factor(opter$wing)
rmodel <- lmer(time ~ height * wing + (1 | subId), data = opter)
anova(rmodel)
install.packages("crossdes")
knitr::opts_chunk$set(echo=TRUE,tidy=TRUE)
library(ggplot2)
library(lattice)
library(psych)
library(dplyr)
library(car)
library(lsmeans)
library(multcomp)
library(emmeans)
library(daewr)
library(lme4)
library(DescTools)
library(nlme)
library(crossdes)
data(splitPdes)
str(splitPdes)
splitPdes$batchId <- splitPdes$bakeId<-rep(NA, nrow(splitPdes))
attach(splitPdes)
splitPdes$batchId[short=="100%" & batch==1] <-1
splitPdes$batchId[short=="100%" & batch==2] <-2
splitPdes$batchId[short=="80%" & batch==1] <-3
splitPdes$batchId[short=="80%" & batch==2] <-4
splitPdes$bakeId[trayT=="RoomT" & bakeT=="low"] <-1
splitPdes$bakeId[trayT=="RoomT" & bakeT=="mid"] <-2
splitPdes$bakeId[trayT=="RoomT" & bakeT=="high"] <-3
splitPdes$bakeId[trayT=="Hot" & bakeT=="low"] <-4
splitPdes$bakeId[trayT=="Hot" & bakeT=="mid"] <-5
splitPdes$bakeId[trayT=="Hot" & bakeT=="high"] <-6
detach(splitPdes)
#data(splitPdes) # embedded example in R package daewr
res.bad <- aov(y~short*bakeT*trayT, data=splitPdes)
summary(res.bad)
rmodel <- lmer(y ~ short*bakeT*trayT +(1|batchId), data = splitPdes)
anova(rmodel)
library(lmerTest)
rmodel2 <- lmer(y ~ short*bakeT*trayT +(1|batchId), data = splitPdes)
anova(rmodel2)
anova(rmodel)
opter <- read.csv("/Users/junhui/Documents/NYU/Courses/J-term2021/Assignment3/copter.csv")
opter$subId <- as.factor(opter$subId)
opter$height <- as.factor(opter$height)
opter$wing <- as.factor(opter$wing)
library(lmerTest)
rmodel <- lmer(time ~ height * wing + (1 | subId), data = opter)
anova(rmodel)
copter <- read.csv("/Users/junhui/Documents/NYU/Courses/J-term2021/Assignment3/copter.csv")
copter$subId <- as.factor(copter$subId)
copter$height <- as.factor(copter$height)
copter$wing <- as.factor(copter$wing)
library(lmerTest)
rmodel <- lmer(time ~ height * wing + (1 | subId), data = copter)
anova(rmodel)
data <- read.csv("/Users/junhui/Documents/NYU/Courses/J-term2021/Assignment3/sport1.csv")
data$Subject <- as.factor(data$Subject)
data$Path <- as.factor(data$Path)
res <- aov(Time ~ Path + Subject, data = data)
summary(res)
data <- read.csv("/Users/junhui/Documents/NYU/Courses/J-term2021/Assignment3/sport1.csv")
data$Subject <- as.factor(data$Subject)
data$Path <- as.factor(data$Path)
res <- aov(Time ~ Path + Subject, data = data)
summary(res)
res1 <- aov(Time ~ Path * Subject, data = data)
summary(res1)
df <- read.csv("/Users/junhui/Documents/NYU/Courses/J-term2021/Assignment3/sport2.csv")
df$Subject <- as.factor(df$Subject)
df$Path <- as.factor(df$Path)
library(lmerTest)
mod3 <- lmer(Time ~ Path*Subject +(1|Subject), data=df)
anova(mod3)
copter <- read.csv("/Users/junhui/Documents/NYU/Courses/J-term2021/Assignment3/copter.csv")
copter$subId <- as.factor(copter$subId)
copter$height <- as.factor(copter$height)
copter$wing <- as.factor(copter$wing)
library(lmerTest)
rmodel <- lmer(time ~ height * wing + (1 | subId), data = copter)
anova(rmodel)
knitr::opts_chunk$set(echo=TRUE,tidy=TRUE)
library(ggplot2)
library(lattice)
library(psych)
library(dplyr)
library(car)
library(lsmeans)
library(multcomp)
library(emmeans)
library(DescTools)
library(daewr)
library(lme4)
# need to install expm package from the source file (download from CRAN)
## Latin Square Design of 5 by 5 blocking variables
set.seed(1234)
nTrt <-5
Trt.name <- c("A","B","C","D","E")
Trt <- 1:nTrt
Period <-1:nTrt
Subject <-1:nTrt
Xlatin <- data.frame(matrix(0,nTrt^2,3))
Subject.temp <- sample(Subject, nTrt, replace=FALSE) # row order for this LSD
Period.temp <-sample(Period, nTrt, replace=FALSE) # column order for this LSD
Trt.temp <- sample(Trt, nTrt, replace=FALSE) # treatment order
Xlatin[,1]<-rep(Subject.temp, each=nTrt) #row Blk var
Xlatin[,2]<-rep(Period.temp,nTrt) #column Blk var
col.ord <- NULL
for (i in 1:nTrt) col.ord <-c(col.ord, nTrt-mod((1:nTrt)+i,nTrt))
Xlatin[,3]<-(Trt.name[Trt.temp])[col.ord] # treatment assignment
print(matrix(Xlatin[,3],nTrt,nTrt))
Xlatin
print(matrix(Xlatin[,3],nTrt,nTrt))
library(maps)
plot('us')
plot('world', 'us')
?maps
?map
plot(map('states'))
plot(map('state'))
plot(map('state'), type = 'l')
library(sf)
library(tmap)
US_state <- st_read('/Users/junhui/Downloads/tl_2017_us_state/tl_2017_us_state.shp')
US_shapefile <- st_read('/Users/junhui/Downloads/tl_2017_us_state/tl_2017_us_state.shp')
knitr::opts_chunk$set(echo = TRUE)
tm_shape(US_shapefile_simple) + tm_polygons()
tm_shape(US_shapefile) + tm_polygons()
US_shapefile <- st_read("/Users/junhui/Downloads/nyu_2451_34094/nyu_2451_34094.shp")
tm_shape(US_shapefile) + tm_polygons()
US_shapefile
uninsured <- read.csv("/Users/junhui/Documents/R/GIS/Howto/ACSST1Y2019.S2701_2021-01-23T183059/ACSST1Y2019.S2701_data_with_overlays_2021-01-23T183055.csv")
uninsured <- uninsured[,which(colnames(uninsured)=="S2701_C05_016E"):which(colnames(uninsured)=="S2701_C05_024M")]
head(uninsured)
View(uninsured)
uninsured <- read.csv("/Users/junhui/Documents/R/GIS/Howto/ACSST1Y2019.S2701_2021-01-23T183059/ACSST1Y2019.S2701_data_with_overlays_2021-01-23T183055.csv")
uninsured <- read.csv("/Users/junhui/Documents/R/GIS/Howto/ACSST1Y2019.S2701_2021-01-23T183059/ACSST1Y2019.S2701_data_with_overlays_2021-01-23T183055.csv")
uninsured <- uninsured[,c(1,2,which(colnames(uninsured)=="S2701_C05_016E"):which(colnames(uninsured)=="S2701_C05_024M"))]
uninsured <- read.csv("/Users/junhui/Documents/R/GIS/Howto/ACSST1Y2019.S2701_2021-01-23T183059/ACSST1Y2019.S2701_data_with_overlays_2021-01-23T183055.csv")
uninsured <- uninsured[,c(1,2,which(colnames(uninsured)=="S2701_C05_016E"), which(colnames(uninsured)=="S2701_C05_017E"), which(colnames(uninsured)=="S2701_C05_018E"), which(colnames(uninsured)=="S2701_C05_019E"), which(colnames(uninsured)=="S2701_C05_020E"), which(colnames(uninsured)=="S2701_C05_021E"))]
head(US_shapefile)
head(uninsured)
library(dplyr)
View(US_shapefile)
View(uninsured)
uninsured <- read.csv("/Users/junhui/Documents/R/GIS/Howto/ACSST1Y2019.S2701_2021-01-23T183059/ACSST1Y2019.S2701_data_with_overlays_2021-01-23T183055.csv", header = TRUE)
uninsured <- uninsured[,c(1,2,which(colnames(uninsured)=="S2701_C05_016E"), which(colnames(uninsured)=="S2701_C05_017E"), which(colnames(uninsured)=="S2701_C05_018E"), which(colnames(uninsured)=="S2701_C05_019E"), which(colnames(uninsured)=="S2701_C05_020E"), which(colnames(uninsured)=="S2701_C05_021E"))]
View(uninsured)
uninsured <- read.csv("/Users/junhui/Documents/R/GIS/Howto/ACSST1Y2019.S2701_2021-01-23T183059/ACSST1Y2019.S2701_data_with_overlays_2021-01-23T183055.csv", header = FALSE)
View(uninsured)
uninsured <- read.csv("/Users/junhui/Documents/R/GIS/Howto/ACSST1Y2019.S2701_2021-01-23T183059/ACSST1Y2019.S2701_data_with_overlays_2021-01-23T183055.csv")
View(uninsured)
View(uninsured)
head(US_shapefile)
uninsured <- read.csv("/Users/junhui/Documents/R/GIS/Howto/ACSST1Y2019.S2701_2021-01-23T183059/ACSST1Y2019.S2701_data_with_overlays_2021-01-23T183055.csv")
uninsured <- uninsured[,c(1,2,which(colnames(uninsured)=="S2701_C05_016E"), which(colnames(uninsured)=="S2701_C05_017E"), which(colnames(uninsured)=="S2701_C05_018E"), which(colnames(uninsured)=="S2701_C05_019E"), which(colnames(uninsured)=="S2701_C05_020E"), which(colnames(uninsured)=="S2701_C05_021E"))]
colnames(uninsured) <- c("ID","STATE_NAME","White alone","Black or African American alone","American Indian and Alaska Native alone","Asian alone","Native Hawaiian and Other Pacific Islander alone","Some other race alone")
head(uninsured)
uninsured <- uninsured[-1,]
head(uninsured)
US_uninsured_shapefile <- left_join(US_shapefile,uninsured,by = "STATE_NAME")
str(uninsured)
uninsured <- read.csv("/Users/junhui/Documents/R/GIS/Howto/ACSST1Y2019.S2701_2021-01-23T183059/ACSST1Y2019.S2701_data_with_overlays_2021-01-23T183055.csv", stringsAsFactors = FALSE)
uninsured <- uninsured[,c(1,2,which(colnames(uninsured)=="S2701_C05_016E"), which(colnames(uninsured)=="S2701_C05_017E"), which(colnames(uninsured)=="S2701_C05_018E"), which(colnames(uninsured)=="S2701_C05_019E"), which(colnames(uninsured)=="S2701_C05_020E"), which(colnames(uninsured)=="S2701_C05_021E"))]
colnames(uninsured) <- c("ID","STATE_NAME","White alone","Black or African American alone","American Indian and Alaska Native alone","Asian alone","Native Hawaiian and Other Pacific Islander alone","Some other race alone")
uninsured <- uninsured[-1,]
US_uninsured_shapefile <- left_join(US_shapefile,uninsured,by = "STATE_NAME")
str(uninsured)
str(US_shapefile)
US_shapefile <- st_read("/Users/junhui/Downloads/nyu_2451_34094/nyu_2451_34094.shp", stringAsFactor = FALSE)
US_shapefile <- st_read("/Users/junhui/Downloads/nyu_2451_34094/nyu_2451_34094.shp", stringsAsFactors = FALSE)
tm_shape(US_shapefile) + tm_polygons()
US_uninsured_shapefile <- left_join(US_shapefile,uninsured,by = "STATE_NAME")
head(US_uninsured_shapefile)
View(US_uninsured_shapefile)
str(US_uninsured_shapefile)
View(US_uninsured_shapefile)
US_uninsured_shapefile <- left_join(US_shapefile,uninsured,by = "STATE_NAME")
str(US_uninsured_shapefile)
US_uninsured_shapefile <- left_join(US_shapefile,uninsured,by = "STATE_NAME")
str(US_uninsured_shapefile)
US_uninsured_shapefile$`White alone` <- as.numeric(US_uninsured_shapefile$`White alone`)
US_uninsured_shapefile$`Black or African American alone` <- as.numeric(US_uninsured_shapefile$`Black or African American alone`)
US_uninsured_shapefile$`American Indian and Alaska Native alone` <- as.numeric(US_uninsured_shapefile$`American Indian and Alaska Native alone`)
US_uninsured_shapefile$`Asian alone` <- as.numeric(US_uninsured_shapefile$`Asian alone`)
US_uninsured_shapefile$`Native Hawaiian and Other Pacific Islander alone` <- as.numeric(US_uninsured_shapefile$`Native Hawaiian and Other Pacific Islander alone`)
US_uninsured_shapefile$`Some other race alone` <- as.numeric(US_uninsured_shapefile$`Some other race alone`)
str(US_uninsured_shapefile)
US_uninsured_shapefile <- left_join(US_shapefile,uninsured,by = "STATE_NAME")
str(US_uninsured_shapefile)
US_uninsured_shapefile <- left_join(US_shapefile,uninsured,by = "STATE_NAME")
str(US_uninsured_shapefile)
US_uninsured_shapefile$`White alone` <- as.numeric(US_uninsured_shapefile$`White alone`)
US_uninsured_shapefile$`Black or African American alone` <- as.numeric(US_uninsured_shapefile$`Black or African American alone`)
US_uninsured_shapefile$`American Indian and Alaska Native alone` <- as.numeric(US_uninsured_shapefile$`American Indian and Alaska Native alone`)
US_uninsured_shapefile$`Asian alone` <- as.numeric(US_uninsured_shapefile$`Asian alone`)
US_uninsured_shapefile$`Native Hawaiian and Other Pacific Islander alone` <- as.numeric(US_uninsured_shapefile$`Native Hawaiian and Other Pacific Islander alone`)
US_uninsured_shapefile$`Some other race alone` <- as.numeric(US_uninsured_shapefile$`Some other race alone`)
str(US_uninsured_shapefile)
map1<-tm_shape(US_uninsured_shapefile)+
tm_polygons(col="Black or African American alone", n=6, style="jenks", palette="BuGn")
map1<-tm_shape(US_uninsured_shapefile)+
tm_polygons(col="Black or African American alone", n=6, style="jenks", palette="BuGn")
map1
plot(US_shapefile)
library(dplyr)
library(sf)
library(tmap)
US_shapefile <- st_read("/Users/junhui/Downloads/nyu_2451_34094/nyu_2451_34094.shp", stringsAsFactors = FALSE)
tm_shape(US_shapefile) + tm_polygons()
uninsured <- read.csv("/Users/junhui/Documents/R/GIS/Howto/ACSST1Y2019.S2701_2021-01-23T183059/ACSST1Y2019.S2701_data_with_overlays_2021-01-23T183055.csv", stringsAsFactors = FALSE)
uninsured <- uninsured[,c(1,2,which(colnames(uninsured)=="S2701_C05_016E"), which(colnames(uninsured)=="S2701_C05_017E"), which(colnames(uninsured)=="S2701_C05_018E"), which(colnames(uninsured)=="S2701_C05_019E"), which(colnames(uninsured)=="S2701_C05_020E"), which(colnames(uninsured)=="S2701_C05_021E"))]
colnames(uninsured) <- c("ID","STATE_NAME","White alone","Black or African American alone","American Indian and Alaska Native alone","Asian alone","Native Hawaiian and Other Pacific Islander alone","Some other race alone")
uninsured <- uninsured[-1,]
head(uninsured)
write.csv("/Users/junhui/Documents/R/GIS/Howto/UninsuranceRate.csv")
write.csv(uninsured, "/Users/junhui/Documents/R/GIS/Howto/UninsuranceRate.csv")
write.csv(uninsured, "/Users/junhui/Documents/R/GIS/Howto/UninsuranceRate.csv", row.names = FALSE)
uninsurance_rate <- read.csv("/Users/junhui/Documents/R/GIS/Howto/UninsuranceRate.csv")
uninsurance_rate <- read.csv("/Users/junhui/Documents/R/GIS/Howto/UninsuranceRate.csv", stringsAsFactors = FALSE)
str(uninsurance_rate)
head(uninsurance_rate)
US_shapefile <- st_read("/Users/junhui/Downloads/nyu_2451_34094/nyu_2451_34094.shp", stringsAsFactors = FALSE)
str(US_shapefile)
str(uninsurance_rate)
map1<-tm_shape(US_uninsured_shapefile)+
tm_polygons(col="Black or African American alone", n=6,title="Uninsured % of Black or African American", style="jenks", palette="YlOrRd")
map1
map <- tm_shape(US_uninsured_shapefile) +
tm_polygons(col="Black or African American alone", n=6,
title="Uninsured % of \n Black or African American",
style="jenks", palette="YlOrRd")
map
map <- tm_shape(US_uninsured_shapefile) +
tm_polygons(col="Black or African American alone", n=6,
title="Uninsured % of \nBlack or African American",
style="jenks", palette="YlOrRd")
map
map <- tm_shape(US_uninsured_shapefile) +
tm_polygons(col="Black or African American alone", n=6,
title="Uninsured % of \nBlack or African American",
style="jenks", palette="YlOrRd")
map
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(sf)
library(tmap)
US_shapefile <- st_read("/Users/junhui/Downloads/nyu_2451_34094/nyu_2451_34094.shp", stringsAsFactors = FALSE)
tm_shape(US_shapefile) + tm_polygons()
uninsurance_rate <- read.csv("/Users/junhui/Documents/R/GIS/Howto/UninsuranceRate.csv", stringsAsFactors = FALSE)
str(uninsurance_rate)
US_uninsured_shapefile <- left_join(US_shapefile,uninsurance_rate,by = "STATE_NAME")
map <- tm_shape(US_uninsured_shapefile) +
tm_polygons(col="Black or African American alone", n=6,
title="Uninsured % of \nBlack or African American",
style="jenks", palette="YlOrRd")
map
map <- tm_shape(US_uninsured_shapefile) +
tm_polygons(col="Black or African American alone", n=6,
title="Uninsured % of \nBlack or African American",
style="jenks", palette="YlOrRd")
map
US_uninsured_shapefile
map <- tm_shape(US_uninsured_shapefile) +
tm_polygons(col="Black or African American alone", n=6,
title="Uninsured % of \nBlack or African American",
style="jenks", palette="YlOrRd")
map
map <- tm_shape(US_uninsured_shapefile) +
tm_polygons(col="Black or African American alone", n=6,
style="jenks", palette="YlOrRd")
map
map1
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(sf)
library(tmap)
US_shapefile <- st_read("/Users/junhui/Downloads/nyu_2451_34094/nyu_2451_34094.shp", stringsAsFactors = FALSE)
tm_shape(US_shapefile) + tm_polygons()
uninsurance_rate <- read.csv("/Users/junhui/Documents/R/GIS/Howto/UninsuranceRate.csv", stringsAsFactors = FALSE)
str(uninsurance_rate)
US_uninsured_shapefile <- left_join(US_shapefile, uninsurance_rate, by = "STATE_NAME")
map <- tm_shape(US_uninsured_shapefile) +
tm_polygons(col="Black or African American alone", n=6,
title="Uninsured % of \nBlack or African American",
style="jenks", palette="YlOrRd")
map
map <- tm_shape(US_uninsured_shapefile) +
tm_polygons(col="Black.or.African.American.alone", n=6,
title="Uninsured % of \nBlack or African American",
style="jenks", palette="YlOrRd")
map
library(dplyr)
library(sf)
library(tmap)
knitr::opts_chunk$set(echo = TRUE)
df <- read.csv("/Users/junhui/Documents/R/GIS/Howto/NYC_BLM_Protests.csv")
head(df)
setwd("~/Documents/R/GIS/Howto/GIS_in_R.geocoding")
